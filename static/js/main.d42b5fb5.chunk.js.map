{"version":3,"sources":["modules/Utils.js","modules/Graphics.js","modules/MechanismGraphics.js","modules/Hud.js","context/VisualizerContext.js","ui/Settings.js","ui/Sidebar.js","ui/VisualizerDisplay.js","ui/Toolbar.js","App.js","serviceWorker.js","index.js"],"names":["getEnumDefault","theEnum","smallestValue","key","v","properties","bIsDefault","pos_yAxis","THREE","pos_zAxis","CameraViewEnum","PERSPECTIVE","ORTHO_TOP","ORTHO_BOTTOM","ORTHO_FRONT","ORTHO_BACK","ORTHO_LEFT","ORTHO_RIGHT","1","value","name","displayName","2","3","4","5","6","7","BackgroundColorEnum","DARK_BLUE","GREY","WHITE","WARM","color","textOverlayColor","r","g","b","a","CameraControlsManager","theCameraManager","renderer","Object","classCallCheck","this","cameraManager","controls","controlsMap","bCameraControlsEnabled","theViewType","OrbitControls","camera","domElement","enableKeys","TrackballControls","noRotate","zoomSpeed","panSpeed","staticMoving","dynamicDampingFactor","previousViewType","reset","enabled","oldViewType","bEnabled","update","CameraManager","width","height","WIDTH","HEIGHT","currentViewType","orthoCam","perspectiveCam","startingOrthoCamDistance","startingPerspectiveCamPosition","changeCamera","getOrCreatePerspectiveCamera","setCameraView","getOrCreateOrthographicCamera","rotation","set","position","copy","up","Error","concat","ASPECT","zoom","theNewWidth","theNewHeight","aspect","updateProjectionMatrix","left","right","top","bottom","VisualizerSettings","currentBackgroundColor","distanceScale","colorChoice","MoveableTarget","_super","call","Visualizer","settings","arguments","length","undefined","_settings","_width","_height","_scene","_renderer","_mount","_cameraManager","_cameraControlsManager","_mechanism","_target","_animHooks","_simulateMotion","mount","_this","window","addEventListener","onCanvasResize","clientWidth","clientHeight","setClearColor","getDefaultBackgroundColorValue","setSize","append","initCamera","add","updateControlType","ambientLight","fog","addShadowedLight","plane","specular","x","Math","PI","y","receiveShadow","axisHelper","_transformControls","Mechanism","Mechanism3Dof","MechanismParameters3Dof","mechanism","meshUrlBase","process","meshUrlYawRod","meshUrlYawRodMount","meshUrlCenterPlatform","meshUrlServoPitchRollLeft","meshUrlServoPitchRollRight","meshUrlServoYaw","meshUrlServoHorn","meshUrlBallJoint","loader","STLLoader","materialBase","shininess","opacity","transparent","materialServo","materialServoHorn","materialBallJoint","load","geometry","mesh","castShadow","base","platformStand","platform","_loop","_arr$_i","slicedToArray","_arr","_i","servo","meshUrl","horn","servo_PitchRoll_left","servo_PitchRoll_right","servo_Yaw","_loop2","bJoint","_arr2","_i2","scale","ballJoint","ballJoint_left","ballJoint_right","_i3","_arr3","addVisualMeshesToMechanism","animate","z","intensity","directionalLight","shadow","near","far","bias","setFinalOrientation","hook","push","deactivateTargetMode","setCameraControlsEnabled","TransformControls","attach","detach","remove","dispose","console","log","updateAspectRatio","theBackgroundColor","setBackgroundColor","updateBackgroundColor","newColorVal","getCurrentBackgroundColorValue","_this2","requestAnimationFrame","updateControls","animateMechanism","forEach","render","simulateMotion","trackTarget","getWorldPosition","vectorToFixedString","fractionDigits","toFixed","MechanismDebugHudComponent","_isDisposed","_visualizer","_dispServoLeft","_dispServoHornLeft","_dispPlatformAnchorLeft","_dispConnectingRodLeft","_dispServoRight","_dispServoHornRight","_dispPlatformAnchorRight","_dispConnectingRodRight","_dispServoYaw","_dispServoHornYaw","_dispPlatformStandAnchorYaw","_dispConnectingRodYaw","elem","removeChild","visualizer","document","createElement","textContent","appendChild","updateElement","getServoAngle_Left","getServoAngle_Right","getConnectingRodMidPoint_Left_WorldPosition","getConnectingRodLength_Left","getConnectingRodMidPoint_Right_WorldPosition","getConnectingRodLength_Right","hornBjLeft","hornBjRight","platformAnchorLeft","platformAnchorRight","getYawServoAngle","getYawConnectingRodMidPoint_WorldPosition","getYawConnectingRodLength","hornBjYaw","platformStandAnchor","dispElem","worldPosition","msg","project","style","transform","DebugHUD","_componentsByName","component","removeHudComponentByName","init","hasComponent","_Object$entries","entries","_Object$entries$_i","VisualizerStateContext","React","createContext","VisualizerDispatchContext","visualizerReducer","state","action","type","visualizerMount","debugHUD","hudMount","addAnimHook","changeView","view","changeBackgroundColor","activateTargetMode","addOrReplaceHUDComponentByName","VisualizerProvider","_ref","children","_React$useReducer","useReducer","_React$useReducer2","dispatch","react_default","Provider","Settings","useContext","vizContext","Button","variant","size","block","onClick","toggleMechanismSimulatedMotion","resetMechanismOrientation","Sidebar","Tabs","defaultActiveKey","id","Tab","eventKey","title","ui_Settings","disabled","VisualizerDisplay","context","className","ref","Component","contextType","CameraViewSelector","NavDropdown","keys","map","index","Item","BackgroundColorSelector","TargetControlSelector","Toolbar","Navbar","bg","expand","Brand","Toggle","aria-controls","Collapse","Nav","App","Container","fluid","Row","Col","ui_Sidebar","xs","ui_Toolbar","src_ui_VisualizerDisplay","Boolean","location","hostname","match","ReactDOM","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d42b5fb5.chunk.js","sourcesContent":["let getEnumDefault = (theEnum) => {\n  let smallestValue = null;\n  for (let key in theEnum) {\n    //don't consider the properties key\n    if (key === \"properties\") break;\n    // Look for indicator of default as an early exit\n    let v = theEnum[key];\n    if (theEnum.properties[v].bIsDefault) {\n      return v;\n    } else if (smallestValue == null || v < smallestValue) {\n      smallestValue = v;\n    }\n  }\n  return smallestValue;\n};\n\n//creates an array of length \"len\" and filled with the specified itm value\nlet createArray = (len, itm) => {\n  let arr1 = [itm],\n    arr2 = [];\n  while (len > 0) {\n    if (len & 1) arr2 = arr2.concat(arr1);\n    arr1 = arr1.concat(arr1);\n    len >>>= 1;\n  }\n  return arr2;\n};\n\nlet getEqualSpacedIntsFromRange = (min, max, numValues) => {\n  // calculate the range\n  let range = Math.abs(max - min);\n  let increment = Math.floor(range / (numValues - 1));\n\n  // check that the min is actually the min, and floor it\n  min = Math.floor(Math.min(min, max));\n\n  let values = [];\n  for (let i = 0; i < numValues; i++) {\n    values.push(min + i * increment);\n  }\n  return values;\n};\n\nlet createGUID = () => {\n  function s4() {\n    return Math.floor((1 + Math.random()) * 0x10000)\n      .toString(16)\n      .substring(1);\n  }\n  return (\n    s4() +\n    s4() +\n    \"-\" +\n    s4() +\n    \"-\" +\n    s4() +\n    \"-\" +\n    s4() +\n    \"-\" +\n    s4() +\n    s4() +\n    s4()\n  );\n};\n\n//converts a color encoded in javascript hex (ie: 0x000028) to css formatted hex string (ie: #000028)\nlet parseCSSColor = (color) => {\n  if (typeof color === \"number\") {\n    //make sure our hexadecimal number is padded out\n    color = \"#\" + (\"00000\" + (color | 0).toString(16)).substr(-6);\n  }\n  return color;\n};\n\n//calculates the contrasting color for determining overlay or text colors given a background\nlet getContrast50 = (hexcolor) => {\n  return parseInt(hexcolor, 16) > 0xffffff / 2 ? \"black\" : \"white\";\n};\n\nexport {\n  // Public Methods\n  getEnumDefault,\n  createArray,\n  getEqualSpacedIntsFromRange,\n  createGUID,\n  parseCSSColor,\n  getContrast50,\n};\n","import * as THREE from \"three\";\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls.js\";\nimport { TrackballControls } from \"three/examples/jsm/controls/TrackballControls.js\";\nimport { TransformControls } from \"three/examples/jsm/controls/TransformControls.js\";\nimport { getEnumDefault } from \"./Utils\";\nimport { Mechanism } from \"stewart-platform-simulator\";\nimport { addVisualMeshesToMechanism } from \"./MechanismGraphics\";\n\n// const pos_xAxis = new THREE.Vector3(1, 0, 0);\n// const neg_xAxis = new THREE.Vector3(-1, 0, 0);\nconst pos_yAxis = new THREE.Vector3(0, 1, 0);\n// const neg_yAxis = new THREE.Vector3(0, -1, 0);\nconst pos_zAxis = new THREE.Vector3(0, 0, 1);\n// const neg_zAxis = new THREE.Vector3(0, 0, -1);\n// const scene_origin = new THREE.Vector3(0, 0, 0);\n\nconst CameraViewEnum = {\n  PERSPECTIVE: 1,\n  ORTHO_TOP: 2,\n  ORTHO_BOTTOM: 3,\n  ORTHO_FRONT: 4,\n  ORTHO_BACK: 5,\n  ORTHO_LEFT: 6,\n  ORTHO_RIGHT: 7,\n\n  properties: {\n    1: {\n      value: 1,\n      name: \"PERSPECTIVE\",\n      displayName: \"Free Cam\",\n      bIsDefault: true,\n    },\n    2: {\n      value: 2,\n      name: \"ORTHO_TOP\",\n      displayName: \"Top View\",\n    },\n    3: {\n      value: 3,\n      name: \"ORTHO_BOTTOM\",\n      displayName: \"Bottom View\",\n    },\n    4: {\n      value: 4,\n      name: \"ORTHO_FRONT\",\n      displayName: \"Front View\",\n    },\n    5: {\n      value: 5,\n      name: \"ORTHO_BACK\",\n      displayName: \"Back View\",\n    },\n    6: {\n      value: 6,\n      name: \"ORTHO_LEFT\",\n      displayName: \"Left View\",\n    },\n    7: {\n      value: 7,\n      name: \"ORTHO_RIGHT\",\n      displayName: \"Right View\",\n    },\n  },\n};\n\nconst BackgroundColorEnum = {\n  DARK_BLUE: 1,\n  GREY: 2,\n  WHITE: 3,\n  WARM: 4,\n\n  properties: {\n    1: {\n      value: 1,\n      name: \"DARK_BLUE\",\n      color: 0x151c25,\n      displayName: \"Dark Blue\",\n      bIsDefault: false,\n      textOverlayColor: { r: 255, g: 255, b: 255, a: 1.0 },\n    },\n    2: {\n      value: 2,\n      name: \"GREY\",\n      color: 0xb0b0b0,\n      displayName: \"Grey\",\n      bIsDefault: false,\n      textOverlayColor: { r: 0, g: 0, b: 0, a: 1.0 },\n    },\n    3: {\n      value: 3,\n      name: \"WHITE\",\n      color: 0xffffff,\n      displayName: \"White\",\n      bIsDefault: false,\n      textOverlayColor: { r: 0, g: 0, b: 0, a: 1.0 },\n    },\n    4: {\n      value: 4,\n      name: \"WARM\",\n      color: 0x72645b,\n      displayName: \"Warm\",\n      bIsDefault: true,\n      textOverlayColor: { r: 0, g: 0, b: 0, a: 1.0 },\n    },\n  },\n};\n\n// CameraControlsManager (Class): A StewartSimulator Graphics module class.\n// Manages switching between various sets of controls for each view.\nclass CameraControlsManager {\n  constructor(theCameraManager, renderer) {\n    this.cameraManager = theCameraManager;\n    this.renderer = renderer;\n    this.controls = null;\n    this.controlsMap = {};\n    this.bCameraControlsEnabled = true;\n  }\n\n  //update the current camera controls to match the view type specified... create appropriate controls if they don't exist\n  updateControlType(theViewType) {\n    //if the controls for this view type haven't been initialized, create them\n    if (!(theViewType in this.controlsMap)) {\n      if (theViewType === CameraViewEnum.PERSPECTIVE) {\n        this.controlsMap[theViewType] = new OrbitControls(\n          this.cameraManager.camera,\n          this.renderer.domElement\n        );\n        this.controlsMap[theViewType].enableKeys = false;\n      } else {\n        this.controlsMap[theViewType] = new TrackballControls(\n          this.cameraManager.camera,\n          this.renderer.domElement\n        );\n        this.controlsMap[theViewType].noRotate = true;\n        this.controlsMap[theViewType].zoomSpeed = 1.5;\n        this.controlsMap[theViewType].panSpeed = 10;\n        this.controlsMap[theViewType].staticMoving = true;\n        this.controlsMap[theViewType].dynamicDampingFactor = 0.3;\n      }\n    }\n\n    //special case where the previous and current view types are the same (ie: just resetting the camera)\n    if (theViewType === this.cameraManager.previousViewType) {\n      this.controls.reset();\n      //set the new controls to enabled if not in tool mode\n      this.controls.enabled = this.bCameraControlsEnabled;\n      return;\n    }\n\n    //use the appropriate controls\n    this.controls = this.controlsMap[theViewType];\n    //reset the appropriate controls\n    this.controls.reset();\n\n    //disable the old controls\n    let oldViewType = this.cameraManager.previousViewType;\n    if (oldViewType in this.controlsMap) {\n      this.controlsMap[oldViewType].enabled = false;\n    }\n\n    //set the new controls to enabled if not in tool mode\n    this.controls.enabled = this.bCameraControlsEnabled;\n  }\n\n  toggleCameraControls() {\n    //toggle the camera controls\n    this.bCameraControlsEnabled = !this.bCameraControlsEnabled;\n    //set the enabled property of the current controls\n    this.controls.enabled = this.bCameraControlsEnabled;\n  }\n\n  setCameraControlsEnabled(bEnabled) {\n    this.bCameraControlsEnabled = bEnabled;\n    this.controls.enabled = this.bCameraControlsEnabled;\n  }\n\n  updateControls() {\n    this.controls.update();\n  }\n}\n\n// CameraManager (Class): A StewartSimulator Graphics module class.\n//  Manages switching between various cameras used for different views.\nclass CameraManager {\n  constructor(width, height) {\n    this.WIDTH = width;\n    this.HEIGHT = height;\n    this.camera = null;\n    this.currentViewType = null;\n    this.previousViewType = null;\n    this.orthoCam = null;\n    this.perspectiveCam = null;\n    this.startingOrthoCamDistance = 125;\n    this.startingPerspectiveCamPosition = new THREE.Vector3(125, 50, 70);\n  }\n  //initialize the camera to a perspective view\n  initCamera() {\n    this.changeCamera(getEnumDefault(CameraViewEnum));\n  }\n\n  //Switches the camera type and camera pose to match the view type\n  changeCamera(theViewType) {\n    switch (theViewType) {\n      case CameraViewEnum.PERSPECTIVE:\n        this.camera = this.getOrCreatePerspectiveCamera();\n        this.setCameraView(theViewType);\n        break;\n      default:\n        this.camera = this.getOrCreateOrthographicCamera();\n        this.setCameraView(theViewType);\n        break;\n    }\n\n    this.previousViewType = this.currentViewType;\n    this.currentViewType = theViewType;\n  }\n\n  //sets the pose of the camera to match the desired view type\n  setCameraView(theViewType) {\n    this.camera.rotation.set(0, 0, 0);\n    switch (theViewType) {\n      case CameraViewEnum.PERSPECTIVE:\n        this.camera.position.copy(this.startingPerspectiveCamPosition);\n        break;\n      case CameraViewEnum.ORTHO_FRONT:\n        this.camera.position.set(0, 0, this.startingOrthoCamDistance);\n        this.camera.up = pos_yAxis; //set up vectors so that the pan function from the TrackballControls will work properly\n        break;\n      case CameraViewEnum.ORTHO_BACK:\n        this.camera.position.set(0, 0, -this.startingOrthoCamDistance);\n        this.camera.up = pos_yAxis;\n        break;\n      case CameraViewEnum.ORTHO_LEFT:\n        this.camera.position.set(-this.startingOrthoCamDistance, 0, 0);\n        this.camera.up = pos_yAxis;\n        break;\n      case CameraViewEnum.ORTHO_RIGHT:\n        this.camera.position.set(this.startingOrthoCamDistance, 0, 0);\n        this.camera.up = pos_yAxis;\n        break;\n      case CameraViewEnum.ORTHO_TOP:\n        this.camera.position.set(0, this.startingOrthoCamDistance, 0);\n        this.camera.up = pos_zAxis;\n        break;\n      case CameraViewEnum.ORTHO_BOTTOM:\n        this.camera.position.set(0, -this.startingOrthoCamDistance, 0);\n        this.camera.up = pos_zAxis;\n        break;\n      default:\n        throw Error(`Unexpected viewtype: ${theViewType}.`);\n    }\n  }\n\n  //retrieves the perspective camera or creates one if it doesn't exist\n  getOrCreatePerspectiveCamera() {\n    if (!this.perspectiveCam) {\n      // set some camera attributes\n      let FOV = 90,\n        ASPECT = this.WIDTH / this.HEIGHT,\n        NEAR = 0.1,\n        FAR = 10000;\n\n      this.perspectiveCam = new THREE.PerspectiveCamera(FOV, ASPECT, NEAR, FAR);\n    }\n    return this.perspectiveCam;\n  }\n\n  //retrieves the orthographic camera or creates one if it doesn't exist\n  getOrCreateOrthographicCamera() {\n    if (!this.orthoCam) {\n      this.orthoCam = new THREE.OrthographicCamera(\n        this.WIDTH / -2,\n        this.WIDTH / 2,\n        this.HEIGHT / 2,\n        this.HEIGHT / -2,\n        0.1,\n        10000\n      );\n      // starting zoom\n      this.orthoCam.zoom = 12.0;\n    }\n    return this.orthoCam;\n  }\n\n  //update the aspect ratio of cameras, for use in the event of a resized window\n  updateAspectRatio(theNewWidth, theNewHeight) {\n    //note the new dimensions\n    this.WIDTH = theNewWidth;\n    this.HEIGHT = theNewHeight;\n\n    //update the perspective camera if it's been created\n    if (this.perspectiveCam) {\n      this.perspectiveCam.aspect = this.WIDTH / this.HEIGHT;\n      this.perspectiveCam.updateProjectionMatrix();\n    }\n\n    //update the orthographic camera if it's been created\n    if (this.orthoCam) {\n      this.orthoCam.left = this.WIDTH / -2;\n      this.orthoCam.right = this.WIDTH / 2;\n      this.orthoCam.top = this.HEIGHT / 2;\n      this.orthoCam.bottom = this.HEIGHT / -2;\n      this.orthoCam.updateProjectionMatrix();\n    }\n  }\n}\n\n// VisualizerSettings (Class): A StewartSimulator Graphics module class.\n//  Maintains all the settings for a visualizer.\nclass VisualizerSettings {\n  constructor() {\n    this.currentBackgroundColor = getEnumDefault(BackgroundColorEnum);\n    this.distanceScale = 1.0;\n  }\n\n  getCurrentBackgroundColorValue() {\n    return BackgroundColorEnum.properties[this.currentBackgroundColor].color;\n  }\n\n  getDefaultBackgroundColorValue() {\n    return BackgroundColorEnum.properties[getEnumDefault(BackgroundColorEnum)]\n      .color;\n  }\n\n  setBackgroundColor(colorChoice) {\n    this.currentBackgroundColor = colorChoice;\n  }\n}\n\nclass MoveableTarget extends THREE.Mesh {\n  constructor() {\n    super(\n      new THREE.SphereGeometry(5, 32, 32),\n      new THREE.MeshBasicMaterial({ color: 0xffff00 })\n    );\n  }\n}\n\n// Visualizer (Class): A StewartSimulator Graphics module class.\n// Manages the graphical visualization of the platform. Uses WebGL via THREE.js\nclass Visualizer {\n  constructor(settings = new VisualizerSettings()) {\n    this._settings = settings;\n    this._width = null;\n    this._height = null;\n    this._scene = null;\n    this._renderer = null;\n    this._mount = null;\n    this._cameraManager = null;\n    this._cameraControlsManager = null;\n    this._mechanism = null;\n    this._target = null;\n    this._animHooks = null;\n    this._simulateMotion = false;\n  }\n\n  init(mount) {\n    window.addEventListener(\"resize\", () => this.onCanvasResize(), false);\n\n    this._mount = mount;\n    this._width = this._mount.clientWidth;\n    this._height = this._mount.clientHeight;\n\n    this._scene = new THREE.Scene();\n\n    this._renderer = new THREE.WebGLRenderer();\n    this._renderer.setClearColor(\n      this._settings.getDefaultBackgroundColorValue()\n    );\n    this._renderer.setSize(this._width, this._height);\n\n    this._mount.append(this._renderer.domElement);\n\n    ////////////////////////////////////////////////////////////////////\n    //Initialize the camera manager which will manage switching between various camera views\n    this._cameraManager = new CameraManager(this._width, this._height);\n    this._cameraManager.initCamera();\n    this._scene.add(this._cameraManager.camera);\n\n    ////////////////////////////////////////////////////////////////////\n    //Initialize the camera controls manager which will manage the controls for each camera view\n    this._cameraControlsManager = new CameraControlsManager(\n      this._cameraManager,\n      this._renderer\n    );\n    this._cameraControlsManager.updateControlType(\n      this._cameraManager.currentViewType\n    );\n\n    ////////////////////////////////////////////////////////////////////\n    //Initialize the lighting for the scene\n    //create an ambient light\n    let ambientLight = new THREE.AmbientLight(0xffffff);\n    this._scene.add(ambientLight);\n\n    this._scene.fog = new THREE.Fog(0x72645b, 2, 1500);\n    this._scene.add(new THREE.HemisphereLight(0x443333, 0x111122));\n    // this.addShadowedLight( 100, 100, 0, 0xffffff, 1.35 );\n    this.addShadowedLight(0.5, 1, - 1, 0xffaa00, 1);\n\n    const plane = new THREE.Mesh(\n      new THREE.PlaneGeometry(10000, 10000),\n      new THREE.MeshPhongMaterial({ color: 0x999999, specular: 0x101010 })\n    );\n    plane.rotation.x = -Math.PI / 2;\n    plane.position.y = -200;\n    this._scene.add(plane);\n\n    plane.receiveShadow = true;\n\n    ////////////////////////////////////////////////////////////////////\n    //Setup the actual world geometry using the template meshes where appropriate\n    //An axis object to visualize the the 3 axes in a simple way.\n    //The X axis is red. The Y axis is green. The Z axis is blue.\n    let axisHelper = new THREE.AxesHelper(250 * this._settings.distanceScale);\n    this._scene.add(axisHelper);\n\n    ////////////////////////////////////////////////////////////////////\n    this._target = new MoveableTarget();\n    this._target.position.set(0, 25, 100);\n    this._scene.add(this._target);\n    this._transformControls = null;\n\n    ////////////////////////////////////////////////////////////////////\n    this._animHooks = [];\n\n    ////////////////////////////////////////////////////////////////////\n    this._mechanism = new Mechanism.Mechanism3Dof(new Mechanism.MechanismParameters3Dof());\n    addVisualMeshesToMechanism(this._mechanism);\n\n    this._scene.add(this._mechanism);\n\n    ////////////////////////////////////////////////////////////////////\n    this.animate();\n  }\n\n  addShadowedLight(x, y, z, color, intensity) {\n    const directionalLight = new THREE.DirectionalLight(color, intensity);\n    directionalLight.position.set(x, y, z);\n    this._scene.add(directionalLight);\n\n    directionalLight.castShadow = true;\n\n    const d = 1;\n    directionalLight.shadow.camera.left = -d;\n    directionalLight.shadow.camera.right = d;\n    directionalLight.shadow.camera.top = d;\n    directionalLight.shadow.camera.bottom = -d;\n\n    directionalLight.shadow.camera.near = 1;\n    directionalLight.shadow.camera.far = 400;\n\n    directionalLight.shadow.bias = -0.002;\n  }\n\n  toggleMechanismSimulatedMotion() {\n    this._simulateMotion = !this._simulateMotion;\n  }\n\n  resetMechanismOrientation() {\n    if (this._mechanism === undefined || this._mechanism === null) {\n      return;\n    }\n    this._mechanism.setFinalOrientation(0, 0, 0);\n  }\n\n  addAnimHook(hook) {\n    this._animHooks.push(hook);\n  }\n\n  activateTargetMode() {\n    this.deactivateTargetMode();\n    this._cameraControlsManager.setCameraControlsEnabled(false);\n    this._transformControls = new TransformControls(\n      this._cameraManager.camera,\n      this._mount\n    );\n    this._transformControls.attach(this._target);\n    this._scene.add(this._transformControls);\n  }\n\n  deactivateTargetMode() {\n    if (\n      this._transformControls === undefined ||\n      this._transformControls === null\n    ) {\n      return;\n    }\n    this._transformControls.detach();\n    this._scene.remove(this._transformControls);\n    this._transformControls.dispose();\n    this._transformControls = null;\n    this._cameraControlsManager.setCameraControlsEnabled(true);\n  }\n\n  //Change the camera to the specified view and udpate the controls\n  changeView(theViewType) {\n    console.log(\n      this._cameraManager.camera.position,\n      this._cameraManager.camera.rotation\n    );\n    //remove the camera from the scene, change it and then add it back\n    this._scene.remove(this._cameraManager.camera);\n    this._cameraManager.changeCamera(theViewType);\n    this._scene.add(this._cameraManager.camera);\n\n    //update the camera controls\n    this._cameraControlsManager.updateControlType(theViewType);\n  }\n\n  //update the canvas and camera whenever the window is resized\n  onCanvasResize() {\n    //retrieve the new dimensions of the canvas' parent div\n    this._width = this._mount.clientWidth;\n    this._height = this._mount.clientHeight;\n\n    //update the aspect ratio of the cameras\n    this._cameraManager.updateAspectRatio(this._width, this._height);\n\n    //update the size of the canvas to fill its parent div\n    this._renderer.setSize(this._width, this._height);\n  }\n\n  //Change the background color settings\n  changeBackgroundColor(theBackgroundColor) {\n    this._settings.setBackgroundColor(theBackgroundColor);\n    this.updateBackgroundColor();\n  }\n\n  //Update the visibility of the new background color\n  updateBackgroundColor() {\n    let newColorVal = this._settings.getCurrentBackgroundColorValue();\n    this._renderer.setClearColor(newColorVal);\n  }\n\n  animate() {\n    requestAnimationFrame(() => this.animate());\n\n    //update the controls\n    if (this._cameraControlsManager.bCameraControlsEnabled) {\n      this._cameraControlsManager.updateControls();\n    }\n\n    this.animateMechanism();\n    this._animHooks.forEach((hook) => {\n      hook.animate();\n    });\n    this.render();\n  }\n\n  animateMechanism() {\n    if (this._mechanism == null || this._mechanism === undefined) {\n      return;\n    }\n\n    if (\n      this._transformControls == null ||\n      this._transformControls === undefined\n    ) {\n      if (this._simulateMotion) {\n        this._mechanism.simulateMotion();\n      }\n    } else {\n      this._mechanism.trackTarget(\n        this._target.getWorldPosition(new THREE.Vector3())\n      );\n    }\n    this._mechanism.animate();\n  }\n\n  render() {\n    this._renderer.render(this._scene, this._cameraManager.camera);\n  }\n}\n\nexport { Visualizer, BackgroundColorEnum, CameraViewEnum };\n","import * as THREE from \"three\";\nimport { STLLoader } from \"three/examples/jsm/loaders/STLLoader.js\";\n\nfunction addVisualMeshesToMechanism(\n    mechanism,\n    meshUrlBase = process.env.PUBLIC_URL + \"/models/wheatley/skeleton.stl\",\n    meshUrlYawRod = process.env.PUBLIC_URL + \"/models/wheatley/yaw_rod.stl\",\n    meshUrlYawRodMount = process.env.PUBLIC_URL + \"/models/wheatley/yaw_rod_mount.stl\",\n    meshUrlCenterPlatform = process.env.PUBLIC_URL + \"/models/wheatley/center_platform.stl\",\n    meshUrlServoPitchRollLeft = process.env.PUBLIC_URL + \"/models/servo/s3003.stl\",\n    meshUrlServoPitchRollRight = process.env.PUBLIC_URL + \"/models/servo/s3003.stl\",\n    meshUrlServoYaw = process.env.PUBLIC_URL + \"/models/servo/s3003.stl\",\n    meshUrlServoHorn = process.env.PUBLIC_URL + \"/models/horn/MG90s_arm.stl\",\n    meshUrlBallJoint = process.env.PUBLIC_URL + \"/models/ball-joint/m3_ball_joint.stl\",\n) {\n    const loader = new STLLoader();\n    // Materials\n    const materialBase = new THREE.MeshPhongMaterial({\n        color: 0xaaaaaa,\n        specular: 0x111111,\n        shininess: 200,\n        opacity: 0.5,\n        transparent: true,\n    });\n    const materialServo = new THREE.MeshBasicMaterial({\n        color: 0x404040,\n        opacity: 0.5,\n        transparent: true,\n    });\n    const materialServoHorn = new THREE.MeshBasicMaterial({\n        color: 0xf5f5f5,\n        opacity: 0.5,\n        transparent: true,\n    });\n    const materialBallJoint = new THREE.MeshBasicMaterial({\n        color: 0x303030,\n        opacity: 0.5,\n        transparent: true,\n    });\n\n    // Skeleton\n    loader.load(\n        meshUrlBase,\n        function (geometry) {\n            const mesh = new THREE.Mesh(geometry, materialBase);\n            mesh.rotation.set(-Math.PI / 2, 0, 0);\n            mesh.castShadow = true;\n            mesh.receiveShadow = true;\n            mechanism.base.add(mesh);\n        }\n    );\n\n    // Platform Stand - Yaw rod\n    loader.load(\n        meshUrlYawRod,\n        function (geometry) {\n            const mesh = new THREE.Mesh(geometry, materialBase);\n            mesh.rotation.set(-Math.PI / 2, 0, 0);\n            mechanism.platformStand.add(mesh);\n        }\n    );\n    // Platform stand - Linkage Mount\n    loader.load(\n        meshUrlYawRodMount,\n        function (geometry) {\n            const mesh = new THREE.Mesh(geometry, materialBase);\n            mesh.rotation.set(-Math.PI / 2, 0, 0);\n            mechanism.platformStand.add(mesh);\n        }\n    );\n\n    // Platform\n    loader.load(\n        meshUrlCenterPlatform,\n        function (geometry) {\n            const mesh = new THREE.Mesh(geometry, materialBase);\n            mesh.rotation.set(-Math.PI / 2, 0, 0);\n            mechanism.platform.add(mesh);\n        }\n    );\n\n    // Servos\n    for (const [servo, meshUrl] of [\n        [mechanism.servo_PitchRoll_left, meshUrlServoPitchRollLeft],\n        [mechanism.servo_PitchRoll_right, meshUrlServoPitchRollRight],\n        [mechanism.servo_Yaw, meshUrlServoYaw]]\n    ) {\n        loader.load(\n            meshUrl,\n            function (geometry) {\n                const mesh = new THREE.Mesh(geometry, materialServo);\n                servo.add(mesh);\n            }\n        );\n        loader.load(\n            meshUrlServoHorn,\n            function (geometry) {\n                const mesh = new THREE.Mesh(geometry, materialServoHorn);\n                mesh.rotation.set(Math.PI, 0, 0);\n                servo.horn.add(mesh);\n            }\n        );\n    }\n\n    for (const bJoint of [\n        mechanism.platformStand.ballJoint,\n        mechanism.servo_PitchRoll_left.horn.ballJoint,\n        mechanism.servo_PitchRoll_right.horn.ballJoint,\n        mechanism.servo_Yaw.horn.ballJoint,\n        mechanism.platformStand.ballJoint,\n        mechanism.platform.ballJoint_left,\n        mechanism.platform.ballJoint_right,\n    ]) {\n        loader.load(\n            meshUrlBallJoint,\n            function (geometry) {\n                const mesh = new THREE.Mesh(geometry, materialBallJoint);\n                mesh.position.set(0, 0, 0);\n                mesh.rotation.set(-Math.PI / 2, 0, 0);\n                let scaleFactor = 0.15;\n                mesh.scale.set(scaleFactor, scaleFactor, scaleFactor);\n                bJoint.add(mesh);\n            }\n        );\n    }\n\n    // Axes Helpers\n    mechanism.platform.add(new THREE.AxesHelper(30));\n    mechanism.platformStand.add(new THREE.AxesHelper(15));\n\n    for (const servo of [\n        mechanism.servo_PitchRoll_left,\n        mechanism.servo_PitchRoll_right,\n        mechanism.servo_Yaw\n    ]) {\n        servo.add(new THREE.AxesHelper(8));\n        servo.horn.add(new THREE.AxesHelper(8));\n        servo.horn.ballJoint.add(new THREE.AxesHelper(5));\n    }\n}\n\nexport { addVisualMeshesToMechanism }","import * as THREE from \"three\";\n\nfunction vectorToFixedString(v, fractionDigits = 1) {\n    return `${v.x.toFixed(fractionDigits)},${v.y.toFixed(fractionDigits)},${v.z.toFixed(fractionDigits)}`\n}\n\nclass MechanismDebugHudComponent {\n    constructor() {\n        this._isDisposed = false;\n        this._mount = null;\n        this._visualizer = null;\n        this._mechanism = null;\n\n        this._dispServoLeft = null;\n        this._dispServoHornLeft = null;\n        this._dispPlatformAnchorLeft = null;\n        this._dispConnectingRodLeft = null;\n\n        this._dispServoRight = null;\n        this._dispServoHornRight = null;\n        this._dispPlatformAnchorRight = null;\n        this._dispConnectingRodRight = null;\n\n        this._dispServoYaw = null;\n        this._dispServoHornYaw = null;\n        this._dispPlatformStandAnchorYaw = null\n        this._dispConnectingRodYaw = null;\n\n        // this._dispExtra = null;\n    }\n\n    dispose() {\n        if (this._isDisposed) {\n            return;\n        }\n\n        this._isDisposed = true;\n\n        [\n            this._dispServoLeft,\n            this._dispServoHornLeft,\n            this._dispPlatformAnchorLeft,\n            this._dispConnectingRodLeft,\n            this._dispServoRight,\n            this._dispServoHornRight,\n            this._dispPlatformAnchorRight,\n            this._dispConnectingRodRight,\n            this._dispServoYaw,\n            this._dispServoHornYaw,\n            this._dispPlatformStandAnchorYaw,\n            this._dispConnectingRodYaw,\n            // this._dispExtra,\n        ].forEach(elem => {\n            this._mount.removeChild(elem);\n            elem.remove();\n        });\n\n        this._dispServoLeft = null;\n        this._dispServoHornLeft = null;\n        this._dispPlatformAnchorLeft = null;\n        this._dispConnectingRodLeft = null;\n\n        this._dispServoRight = null;\n        this._dispServoHornRight = null;\n        this._dispPlatformAnchorRight = null;\n        this._dispConnectingRodRight = null;\n\n        this._dispServoYaw = null;\n        this._dispServoHornYaw = null;\n        this._dispPlatformStandAnchorYaw = null\n        this._dispConnectingRodYaw = null;\n\n\n        this._mount = null;\n        this._visualizer = null;\n        this._mechanism = null;\n    }\n\n    init(mount, visualizer) {\n        if (this._isDisposed) {\n            return;\n        }\n\n        this._mount = mount;\n        this._visualizer = visualizer;\n        this._mechanism = visualizer._mechanism;\n\n        ////////////////////////////////////////////////////////////////////\n        this._dispServoLeft = document.createElement(\"div\");\n        this._dispServoHornLeft = document.createElement(\"div\");\n        this._dispPlatformAnchorLeft = document.createElement(\"div\");\n        this._dispConnectingRodLeft = document.createElement(\"div\");\n\n        this._dispServoRight = document.createElement(\"div\");\n        this._dispServoHornRight = document.createElement(\"div\");\n        this._dispPlatformAnchorRight = document.createElement(\"div\");\n        this._dispConnectingRodRight = document.createElement(\"div\");\n\n        this._dispServoYaw = document.createElement(\"div\");\n        this._dispServoHornYaw = document.createElement(\"div\");\n        this._dispPlatformStandAnchorYaw = document.createElement(\"div\");\n        this._dispConnectingRodYaw = document.createElement(\"div\");\n        // this._dispExtra = document.createElement(\"div\");\n\n        [\n            this._dispServoLeft,\n            this._dispServoHornLeft,\n            this._dispPlatformAnchorLeft,\n            this._dispConnectingRodLeft,\n            this._dispServoRight,\n            this._dispServoHornRight,\n            this._dispPlatformAnchorRight,\n            this._dispConnectingRodRight,\n            this._dispServoYaw,\n            this._dispServoHornYaw,\n            this._dispPlatformStandAnchorYaw,\n            this._dispConnectingRodYaw,\n            // this._dispExtra,\n        ].forEach(elem => {\n            elem.textContent = \"placeholder\";\n            this._mount.appendChild(elem);\n        });\n    }\n\n    animate() {\n        if (this._isDisposed) {\n            return;\n        }\n\n        ////////////////////////////////////////////////////////////////////\n        // update the display text for left and right servo\n        this.updateElement(\n            this._dispServoLeft,\n            this._mechanism.servo_PitchRoll_left.getWorldPosition(new THREE.Vector3()),\n            `Rotation: ${this._mechanism.getServoAngle_Left().toFixed(2)}rad`\n        )\n        this.updateElement(\n            this._dispServoRight,\n            this._mechanism.servo_PitchRoll_right.getWorldPosition(new THREE.Vector3()),\n            `Rotation: ${this._mechanism.getServoAngle_Right().toFixed(2)}rad`\n        )\n\n        ////////////////////////////////////////////////////////////////////\n        // update the display text for left and right connecting rods\n        this.updateElement(\n            this._dispConnectingRodLeft,\n            this._mechanism.getConnectingRodMidPoint_Left_WorldPosition(),\n            `Len: ${this._mechanism.getConnectingRodLength_Left().toFixed(2)}`\n        )\n        this.updateElement(\n            this._dispConnectingRodRight,\n            this._mechanism.getConnectingRodMidPoint_Right_WorldPosition(),\n            `Len: ${this._mechanism.getConnectingRodLength_Right().toFixed(2)}`\n        )\n\n        ////////////////////////////////////////////////////////////////////\n        // update the display text for left and right servo horn anchors\n        const hornBjLeft = this._mechanism.servo_PitchRoll_left\n            .horn\n            .ballJoint\n            .getWorldPosition(new THREE.Vector3());\n        this.updateElement(\n            this._dispServoHornLeft,\n            hornBjLeft,\n            vectorToFixedString(hornBjLeft)\n        )\n        const hornBjRight = this._mechanism.servo_PitchRoll_right\n            .horn\n            .ballJoint\n            .getWorldPosition(new THREE.Vector3());\n        this.updateElement(\n            this._dispServoHornRight,\n            hornBjRight,\n            vectorToFixedString(hornBjRight)\n        )\n\n        ////////////////////////////////////////////////////////////////////\n        // update the display text for left and right platform anchors\n        const platformAnchorLeft = this._mechanism.platform\n            .ballJoint_left\n            .getWorldPosition(new THREE.Vector3());\n        this.updateElement(\n            this._dispPlatformAnchorLeft,\n            platformAnchorLeft,\n            vectorToFixedString(platformAnchorLeft)\n        )\n        const platformAnchorRight = this._mechanism.platform\n            .ballJoint_right\n            .getWorldPosition(new THREE.Vector3());\n        this.updateElement(\n            this._dispPlatformAnchorRight,\n            platformAnchorRight,\n            vectorToFixedString(platformAnchorRight)\n        )\n\n        ////////////////////////////////////////////////////////////////////\n        // update the display text for yaw components\n        this.updateElement(\n            this._dispServoYaw,\n            this._mechanism.servo_Yaw.getWorldPosition(new THREE.Vector3()),\n            `Rotation: ${this._mechanism.getYawServoAngle().toFixed(2)}rad`\n        )\n        this.updateElement(\n            this._dispConnectingRodYaw,\n            this._mechanism.getYawConnectingRodMidPoint_WorldPosition(),\n            `Len: ${this._mechanism.getYawConnectingRodLength().toFixed(2)}`\n        )\n        const hornBjYaw = this._mechanism.servo_Yaw\n            .horn\n            .ballJoint\n            .getWorldPosition(new THREE.Vector3());\n        this.updateElement(\n            this._dispServoHornYaw,\n            hornBjYaw,\n            vectorToFixedString(hornBjYaw)\n        )\n        const platformStandAnchor = this._mechanism.platformStand\n            .ballJoint\n            .getWorldPosition(new THREE.Vector3());\n        this.updateElement(\n            this._dispPlatformStandAnchorYaw,\n            platformStandAnchor,\n            vectorToFixedString(platformStandAnchor)\n        )\n        ////////////////////////////////////////////////////////////////////\n        // this.updateElement(\n        //   this._dispExtra,\n        //   new THREE.Vector3(),\n        //   \"origin\"\n        // )\n    }\n\n    updateElement(dispElem, worldPosition, msg) {\n        // get the normalized screen coordinate of that position\n        // x and y will be in the -1 to +1 range with x = -1 being\n        // on the left and y = -1 being on the bottom\n        worldPosition.project(this._visualizer._cameraManager.camera);\n        // convert the normalized position to CSS coordinates\n        const x = (worldPosition.x * .5 + .5) * this._visualizer._width;\n        const y = (worldPosition.y * -.5 + .5) * this._visualizer._height;\n        // move the elem to that position\n        dispElem.style.transform = `translate(-50%, -50%) translate(${x}px,${y}px)`;\n        dispElem.textContent = msg\n    }\n}\n\nclass DebugHUD {\n    constructor() {\n        this._mount = null;\n        this._visualizer = null;\n        this._componentsByName = []\n    }\n\n    init(mount, visualizer) {\n        this._mount = mount;\n        this._visualizer = visualizer;\n        this.animate();\n    }\n\n    hasComponent(name) {\n        return name in this._componentsByName;\n    }\n\n    addOrReplaceHUDComponentByName(name, component) {\n        this.removeHudComponentByName(name);\n        component.init(this._mount, this._visualizer)\n        this._componentsByName[name] = component;\n    }\n\n    removeHudComponentByName(name) {\n        if (this.hasComponent(name)) {\n            this._componentsByName[name].dispose();\n            delete this._componentsByName[name];\n        }\n    }\n\n    animate() {\n        for (const [key, component] of Object.entries(this._componentsByName)) {\n            component.animate();\n        }\n    }\n}\n\nexport { DebugHUD, MechanismDebugHudComponent };\n","import React from \"react\";\nimport { Visualizer } from \"../modules/Graphics\";\nimport { DebugHUD, MechanismDebugHudComponent } from \"../modules/Hud\";\n\nconst VisualizerStateContext = React.createContext();\nconst VisualizerDispatchContext = React.createContext();\n\nfunction visualizerReducer(state, action) {\n  switch (action.type) {\n    case \"init\": {\n      state.visualizer.init(action.visualizerMount);\n      state.debugHUD.init(action.hudMount, state.visualizer);\n      state.visualizer.addAnimHook(state.debugHUD);\n      return state;\n    }\n    case \"change_view\": {\n      state.visualizer.changeView(action.view);\n      return state;\n    }\n    case \"change_background_color\": {\n      state.visualizer.changeBackgroundColor(action.color);\n      return state;\n    }\n    case \"activate_target_control\": {\n      state.visualizer.activateTargetMode();\n      return state;\n    }\n    case \"deactivate_target_control\": {\n      state.visualizer.deactivateTargetMode();\n      return state;\n    }\n    case \"toggle_debug_info\": {\n      const componentName = \"debug\";\n      if (state.debugHUD.hasComponent(componentName)) {\n        state.debugHUD.removeHudComponentByName(componentName);\n      }\n      else {\n        state.debugHUD.addOrReplaceHUDComponentByName(componentName, new MechanismDebugHudComponent());\n      }\n      return state;\n    }\n    default: {\n      throw new Error(`Unhandled action type: ${action.type}`);\n    }\n  }\n}\n\nfunction VisualizerProvider({ children }) {\n  const [state, dispatch] = React.useReducer(visualizerReducer, {\n    visualizer: new Visualizer(),\n    debugHUD: new DebugHUD(),\n  });\n  return (\n    <VisualizerStateContext.Provider value={state}>\n      <VisualizerDispatchContext.Provider value={dispatch}>\n        {children}\n      </VisualizerDispatchContext.Provider>\n    </VisualizerStateContext.Provider>\n  );\n}\n\nexport {\n  VisualizerProvider,\n  VisualizerStateContext,\n  VisualizerDispatchContext\n};\n","import React, { useContext } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport { VisualizerDispatchContext } from \"../context/VisualizerContext\";\nimport { VisualizerStateContext } from \"../context/VisualizerContext\";\n\nfunction Settings() {\n  const dispatch = useContext(VisualizerDispatchContext);\n  const vizContext = useContext(VisualizerStateContext);\n\n  return (\n    <div>\n      <h1>Settings...</h1>\n      <Button\n        variant=\"primary\"\n        size=\"lg\"\n        block\n        onClick={() => {\n            dispatch({\n              type: \"toggle_debug_info\"\n            })\n          }\n        }\n      >\n        Toggle Debug HUD\n      </Button>\n      <Button\n        variant=\"primary\"\n        size=\"lg\"\n        block\n        onClick={() => {\n          vizContext.visualizer.toggleMechanismSimulatedMotion();\n        }}\n      >\n        Toggle Simulated Motion\n      </Button>\n      <Button\n        variant=\"primary\"\n        size=\"lg\"\n        block\n        onClick={() => {\n          vizContext.visualizer.resetMechanismOrientation();\n        }}\n      >\n        Reset Orientation\n      </Button>\n    </div>\n  );\n}\n\nexport default Settings;\n","import React from \"react\";\nimport Settings from \"./Settings\";\n\nimport { Tab, Tabs } from \"react-bootstrap\";\n\nfunction Sidebar() {\n  return (\n    <div>\n      <Tabs defaultActiveKey=\"settings\" id=\"uncontrolled-tab-example\">\n        <Tab eventKey=\"settings\" title=\"Settings\">\n          <Settings/>\n        </Tab>\n        <Tab eventKey=\"disabled_example\" title=\"Disabled\" disabled>\n          Disabled example text...\n        </Tab>\n      </Tabs>\n    </div>\n  );\n}\n\nexport default Sidebar;\n","import React from \"react\";\nimport \"./VisualizerDisplay.css\";\nimport { VisualizerDispatchContext } from \"../context/VisualizerContext\";\n\nclass VisualizerDisplay extends React.Component {\n  static contextType = VisualizerDispatchContext;\n\n  componentDidMount() {\n    const dispatch = this.context;\n    dispatch({ type: \"init\", visualizerMount: this.visualizerMount, hudMount: this.hudMount });\n  }\n\n  render() {\n    return (\n      <div\n        className=\"Visualizer-window\"\n        ref={mount => {\n          this.visualizerMount = mount;\n        }}\n      >\n        <div \n          id=\"debug-hud\"\n          ref = {mount => {\n            this.hudMount = mount;\n          }}\n        />\n      </div>\n    );\n  }\n}\n\nexport default VisualizerDisplay;\n","import React, { useContext } from \"react\";\nimport { Navbar, Nav, NavDropdown } from \"react-bootstrap\";\nimport { VisualizerDispatchContext } from \"../context/VisualizerContext\";\nimport { CameraViewEnum, BackgroundColorEnum } from \"../modules/Graphics\";\n\nfunction CameraViewSelector() {\n  const dispatch = useContext(VisualizerDispatchContext);\n\n  return (\n    <NavDropdown title=\"Camera View\" id=\"basic-nav-dropdown\">\n      {Object.keys(CameraViewEnum.properties).map((key, index) => {\n        return (\n          <NavDropdown.Item\n            key={index}\n            onClick={() =>\n              dispatch({\n                type: \"change_view\",\n                view: CameraViewEnum.properties[key].value\n              })\n            }\n          >\n            {CameraViewEnum.properties[key].displayName}\n          </NavDropdown.Item>\n        );\n      })}\n    </NavDropdown>\n  );\n}\n\nfunction BackgroundColorSelector() {\n  const dispatch = useContext(VisualizerDispatchContext);\n  return (\n    <NavDropdown title=\"Background Color\" id=\"basic-nav-dropdown\">\n      {Object.keys(BackgroundColorEnum.properties).map((key, index) => {\n        return (\n          <NavDropdown.Item\n            key={index}\n            onClick={() =>\n              dispatch({\n                type: \"change_background_color\",\n                color: BackgroundColorEnum.properties[key].value\n              })\n            }\n          >\n            {BackgroundColorEnum.properties[key].displayName}\n          </NavDropdown.Item>\n        );\n      })}\n    </NavDropdown>\n  );\n}\n\nfunction TargetControlSelector() {\n  const dispatch = useContext(VisualizerDispatchContext);\n  return (\n    <NavDropdown title=\"Target Control\" id=\"basic-nav-dropdown\">\n      <NavDropdown.Item\n        onClick={() =>\n          dispatch({\n            type: \"deactivate_target_control\"\n          })\n        }\n      >\n        Off\n      </NavDropdown.Item>\n      <NavDropdown.Item\n        onClick={() =>\n          dispatch({\n            type: \"activate_target_control\"\n          })\n        }\n      >\n        On\n      </NavDropdown.Item>\n    </NavDropdown>\n  );\n}\n\nfunction Toolbar() {\n  return (\n    <Navbar bg=\"light\" expand=\"lg\">\n      <Navbar.Brand>Stewart Simulator</Navbar.Brand>\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n      <Navbar.Collapse id=\"basic-navbar-nav\">\n        <Nav className=\"mr-auto\">\n          <CameraViewSelector />\n          <BackgroundColorSelector />\n          <TargetControlSelector />\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n  );\n}\n\nexport default Toolbar;\n","import React from \"react\";\nimport \"./App.css\";\nimport Sidebar from \"./ui/Sidebar\";\nimport VisualizerDisplay from \"./ui/VisualizerDisplay\";\nimport Toolbar from \"./ui/Toolbar\";\nimport { VisualizerProvider } from \"./context/VisualizerContext\";\nimport { Container, Row, Col } from \"react-bootstrap\";\n\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <VisualizerProvider>\n        <Container fluid={true}>\n          <Row>\n            <Col>\n              <Sidebar />\n            </Col>\n            <Col xs={9}>\n              <Toolbar />\n              <VisualizerDisplay />\n            </Col>\n          </Row>\n        </Container>\n      </VisualizerProvider>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}